-- PostgreSQL instance has data directory set to tmp_check/data so for all read functions argument
-- is relative to that data directory patch
-- read_parquet
SELECT count("sepal.length") FROM read_parquet('../../data/iris.parquet') AS ("sepal.length" FLOAT);
 count 
-------
   150
(1 row)

SELECT "sepal.length" FROM read_parquet('../../data/iris.parquet') AS ("sepal.length" FLOAT) ORDER BY "sepal.length"  LIMIT 5;
 sepal.length 
--------------
          4.3
          4.4
          4.4
          4.4
          4.5
(5 rows)

SELECT "sepal.length", file_row_number, filename
    FROM read_parquet('../../data/iris.parquet', file_row_number => true, filename => true)
    AS ("sepal.length" FLOAT, file_row_number INT, filename VARCHAR) ORDER BY "sepal.length"  LIMIT 5;
 sepal.length | file_row_number |        filename         
--------------+-----------------+-------------------------
          4.3 |              13 | ../../data/iris.parquet
          4.4 |               8 | ../../data/iris.parquet
          4.4 |              38 | ../../data/iris.parquet
          4.4 |              42 | ../../data/iris.parquet
          4.5 |              41 | ../../data/iris.parquet
(5 rows)

-- read_csv
SELECT count("sepal.length") FROM read_csv('../../data/iris.csv') AS ("sepal.length" FLOAT);
 count 
-------
   150
(1 row)

SELECT "sepal.length" FROM read_csv('../../data/iris.csv') AS ("sepal.length" FLOAT) ORDER BY "sepal.length" LIMIT 5;
 sepal.length 
--------------
          4.3
          4.4
          4.4
          4.4
          4.5
(5 rows)

SELECT "sepal.length", filename
    FROM read_csv('../../data/iris.csv', filename => true, header => true)
    AS ("sepal.length" FLOAT, filename VARCHAR) ORDER BY "sepal.length"  LIMIT 5;
 sepal.length |      filename       
--------------+---------------------
          4.3 | ../../data/iris.csv
          4.4 | ../../data/iris.csv
          4.4 | ../../data/iris.csv
          4.4 | ../../data/iris.csv
          4.5 | ../../data/iris.csv
(5 rows)

SELECT * FROM read_csv('../../non-existing-file.csv') AS ("sepal.length" FLOAT);
ERROR:  (PGDuckDB/CreatePlan) Prepared query returned an error: 'IO Error: No files found that match the pattern "../../non-existing-file.csv"
-- delta_scan
SELECT duckdb.install_extension('delta');
 install_extension 
-------------------
 t
(1 row)

SELECT count(a) FROM delta_scan('../../data/delta_table') AS (a INT);
 count 
-------
   100
(1 row)

SELECT * FROM delta_scan('../../data/delta_table') AS (a INT, b VARCHAR) WHERE (a = 1 OR b = 'delta_table_3');
 a |       b       
---+---------------
 1 | delta_table_1
 3 | delta_table_3
(2 rows)

