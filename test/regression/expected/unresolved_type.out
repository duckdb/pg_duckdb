-- All functions should automatically use duckdb
set duckdb.execution = false;
select r['a'] ~ 'a.*' from duckdb.query($$ SELECT 'abc' a $$) r;
 ?column? 
----------
 t
(1 row)

select r['a'] !~ 'x.*' from duckdb.query($$ SELECT 'abc' a $$) r;
 ?column? 
----------
 t
(1 row)

select r['a'] LIKE '%b%' from duckdb.query($$ SELECT 'abc' a $$) r;
 ?column? 
----------
 t
(1 row)

select r['a'] NOT LIKE '%x%' from duckdb.query($$ SELECT 'abc' a $$) r;
 ?column? 
----------
 t
(1 row)

select r['a'] ILIKE '%B%' from duckdb.query($$ SELECT 'abc' a $$) r;
 ?column? 
----------
 t
(1 row)

select r['a'] NOT ILIKE '%X%' from duckdb.query($$ SELECT 'abc' a $$) r;
 ?column? 
----------
 t
(1 row)

-- Currently not working, we need to add the similar_to_escape function to
-- DuckDB to make this work.
select r['a'] SIMILAR TO '%b%' from duckdb.query($$ SELECT 'abc' a $$) r;
ERROR:  (PGDuckDB/CreatePlan) Prepared query returned an error: 'Catalog Error: Scalar Function with name similar_to_escape does not exist!
Did you mean "list_sem"?

LINE 1: SELECT (r.a ~ similar_to_escape('%b%'::text)) AS "?column?" FROM (FROM...
                      ^
select r['a'] NOT SIMILAR TO '%b%' from duckdb.query($$ SELECT 'abc' a $$) r;
ERROR:  (PGDuckDB/CreatePlan) Prepared query returned an error: 'Catalog Error: Scalar Function with name similar_to_escape does not exist!
Did you mean "list_sem"?

LINE 1: SELECT (r.a !~ similar_to_escape('%b%'::text)) AS "?column?" FROM (FROM...
                       ^
select length(r['a']) from duckdb.query($$ SELECT 'abc' a $$) r;
 length 
--------
      3
(1 row)

select regexp_replace(r['a'], 'a', 'x') from duckdb.query($$ SELECT 'abc' a $$) r;
 regexp_replace 
----------------
 xbc
(1 row)

select regexp_replace(r['a'], 'A', 'x', 'i') from duckdb.query($$ SELECT 'abc' a $$) r;
 regexp_replace 
----------------
 xbc
(1 row)

select date_trunc('year', r['ts']) from duckdb.query($$ SELECT '2024-08-04 12:34:56'::timestamp ts $$) r;
 date_trunc 
------------
 01-01-2024
(1 row)

select strptime('Wed, 1 January 1992 - 08:38:40 PM', '%a, %-d %B %Y - %I:%M:%S %p');
         strptime         
--------------------------
 Wed Jan 01 20:38:40 1992
(1 row)

select strptime('4/15/2023 10:56:00', ARRAY['%d/%m/%Y %H:%M:%S', '%m/%d/%Y %H:%M:%S']);
         strptime         
--------------------------
 Sat Apr 15 10:56:00 2023
(1 row)

select strftime(date '1992-01-01', '%a, %-d %B %Y - %I:%M:%S %p');
             strftime              
-----------------------------------
 Wed, 1 January 1992 - 12:00:00 AM
(1 row)

select strftime(timestamp '1992-01-01 20:38:40', '%a, %-d %B %Y - %I:%M:%S %p');
             strftime              
-----------------------------------
 Wed, 1 January 1992 - 08:38:40 PM
(1 row)

select strftime(timestamptz '1992-01-01 20:38:40', '%a, %-d %B %Y - %I:%M:%S %p');
             strftime              
-----------------------------------
 Wed, 1 January 1992 - 08:38:40 PM
(1 row)

select strftime(r['ts'], '%a, %-d %B %Y - %I:%M:%S %p') from duckdb.query($$ SELECT timestamp '1992-01-01 20:38:40' ts $$) r;
             strftime              
-----------------------------------
 Wed, 1 January 1992 - 08:38:40 PM
(1 row)

