name: Build Docker

on:
  push:
    tags: ["v*"]
  pull_request:
    paths:
      - Dockerfile
      - docker-bake.hcl
      - ".github/workflows/docker.yaml"
  schedule:
    - cron: "44 4 * * *"
  workflow_dispatch:

jobs:
  docker:
    name: Build Docker
    strategy:
      matrix:
        postgres: ["14", "15", "16", "17"]
        runner: ["ubuntu-24.04", "ubuntu-24.04-arm"]

    runs-on: ${{ matrix.runner }}

    env:
      BUILDKIT_PROGRESS: plain
      POSTGRES_VERSION: ${{ matrix.postgres }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: pgduckdb
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout pg_duckdb extension code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Compute platform
        id: compute_platform
        run: |
          # Set platform depending on which runner we're using
          if [ "${{ matrix.runner }}" = "ubuntu-24.04" ]; then
            echo "platform=amd64" >> "$GITHUB_OUTPUT"
          else
            echo "platform=arm64" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/${{ steps.compute_platform.outputs.platform }}

      - name: docker bake
        uses: docker/bake-action@v5
        with:
          targets: pg_duckdb_${{ matrix.postgres }}
          push: true
          set: |
            *.platform=linux/${{ steps.compute_platform.outputs.platform }}
            *.cache-to=type=gha,mode=max
            *.cache-from=type=gha
            postgres.tags=pgduckdb/pgduckdb:${{ matrix.postgres }}-${{ steps.compute_platform.outputs.platform }}-${{ github.sha }}
            ${{ !contains(github.ref_name, '/') && format('postgres.tags=pgduckdb/pgduckdb:{0}-${1}-{2}', matrix.postgres, steps.compute_platform.outputs.platform, github.ref_name) || '' }}
